---
- name: Scan upstream repository act
  gather_facts: no
  connection: local
  hosts: localhost
  roles:
  - role: gofedinfra
  tasks:
  - set_fact:
      repository: github.com/kr/pretty
      from_date: "2016-01-02"
      to_date: "2018-02-02"

  - name: Retrieve repository info
    artefactreader:
      artefact: golang-project-repository-info
      repository: "{{ repository }}"
    register: info_output

  - set_fact:
      extract: true
      current_info: {}

  - when: info_output.found
    block:
    - set_fact:
        current_info: "{{ info_output.artefact }}"

    - name: Check if the commit date interval is covered
      coveragechecker:
        coverage: "{{ info_output.artefact['coverage'] }}"
        from_date: "{{ from_date | default('') }}"
        to_date: "{{ to_date | default('') }}"
      register: commit_coverage

    - set_fact:
        extract: false
      when: commit_coverage.covered

    - debug: var=commit_coverage

    - debug: var=extract

  - when: extract
    block:
    - name: Retrieve repository
      repositoryretriever:
        repository: github.com/kr/pretty
      register: routput

    - debug: var=routput

    - name: Extract repository info for a given coverage interval
      repositorydataextractor:
        repository: "{{ repository }}"
        directory: "{{ routput.directory }}"
        from_date: "{{ from_date | default('') }}"
        to_date: "{{ to_date | default('') }}"
        info: "{{ info_output.artefact }}"
      register: ioutput

    - name: Remove working directory
      file:
        name: "{{ routput.directory }}"
        state: absent

    - debug: var=ioutput.artefacts

    - name: Store golang-project-repository-info
      artefactwriter:
        artefact: "{{ ioutput.artefacts['golang-project-repository-info'] | to_json }}"
      register: woutput

    - debug: var=woutput

    - name: Store all golang-project-repository-commit artefacts
      artefactwriter:
        artefact: "{{ ioutput.artefacts['golang-project-repository-commit'][item] | to_json }}"
      with_items: "{{ ioutput.artefacts['golang-project-repository-commit'] }}"
