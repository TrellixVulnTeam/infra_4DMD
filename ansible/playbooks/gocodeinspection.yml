---
- name: Go code inspection act
  gather_facts: no
  connection: local
  hosts: localhost
  roles:
  - role: gofedinfra
  tasks:
  - set_fact:
      commit: 121edf0467052d55876a817b89875fb39a99bf78
      repository: github.com/coreos/etcd
      ipprefix: github.com/coreos/etcd

  - name: Check if golang-project-packages artefacts already exist
    artefactreader:
      artefact: golang-project-packages
      repository: "{{ repository }}"
      hexsha: "{{ commit }}"
    register: packages_output

  - debug:
     msg: "Artefact found: {{ packages_output.found }}"

  - name: Check if golang-project-exported-api artefacts already exist
    artefactreader:
      artefact: golang-project-exported-api
      repository: "{{ repository }}"
      hexsha: "{{ commit }}"
    register: api_output

  - debug:
     msg: "Artefact found: {{ api_output.found }}"

  - when: not packages_output.found or not api_output.found
    block:
    - name: Retrieve source code from a repository
      repositorycoderetriever:
        repository: "{{ repository }}"
        hexsha: "{{ commit }}"
      register: routput

    - debug: var=routput

    - name: Extract artefacts from a Go code
      gosymbolsextractor:
        directory: "{{ routput.directory }}"
        repository: "{{ repository }}"
        hexsha: "{{ commit }}"
        ipprefix: "{{ ipprefix }}"
      register: eoutput

    - name: Remove working directory
      file:
        name: "{{ routput.directory }}"
        state: absent

    - name: Store golang-project-packages
      artefactwriter:
        artefact: "{{ eoutput.artefacts['golang-project-packages'] | to_json }}"
      register: woutput

    - debug: var=woutput

    - name: Store golang-project-exported-api
      artefactwriter:
        artefact: "{{ eoutput.artefacts['golang-project-exported-api'] | to_json }}"
      register: woutput

    - debug: var=woutput
